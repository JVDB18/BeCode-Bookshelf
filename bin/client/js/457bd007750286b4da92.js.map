{"version":3,"sources":["webpack:///./components/AdminUsers.js"],"names":["AdminUsers","props","_this","_classCallCheck","this","_getPrototypeOf","call","state","users","uri","show","isCreate","handleclick","bind","_assertThisInitialized","handleCreate","React","Component","setState","_this2","Axios","get","concat","crossdomain","then","response","console","log","data","_this3","length","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","type","value","onClick","_UsersAdd__WEBPACK_IMPORTED_MODULE_3__","map","user","key","_id","pseudo","email","_UsersEdit__WEBPACK_IMPORTED_MODULE_2__","id","isCoach"],"mappings":"o5BAQqBA,cACjB,SAAAA,EAAYC,GAAO,IAAAC,MAAA,mGAAAC,CAAAC,KAAAJ,KACfI,MAAAF,MAAAG,EAAAL,GAAAM,KAAAF,KAAMH,mDACDM,MAAQ,CACTC,MAAO,GACPC,IAAK,uBACLC,KAAM,GACNC,SAAU,IAEdT,EAAKU,YAAcV,EAAKU,YAAYC,KAAjBC,IAAAZ,KACnBA,EAAKa,aAAeb,EAAKa,aAAaF,KAAlBC,IAAAZ,KATLA,wPADiBc,IAAMC,wDAcd,IAApBb,KAAKG,MAAMG,KACXN,KAAKc,SAAS,CACVR,MAAM,IAGVN,KAAKc,SAAS,CACVR,MAAM,4CAKc,IAAxBN,KAAKG,MAAMI,SACXP,KAAKc,SAAS,CACVP,UAAU,IAGdP,KAAKc,SAAS,CACVP,UAAU,gDAIF,IAAAQ,EAAAf,KACVK,EAAML,KAAKG,MAAME,IAEvBW,IAAMC,IAAN,GAAAC,OAAab,EAAb,UAA0B,CAACc,aAAa,IAAOC,KAAK,SAAAC,GAChDC,QAAQC,IAAIF,EAASG,MACrBT,EAAKD,SAAS,CAACV,MAAOiB,EAASG,OAC/BF,QAAQC,IAAIR,EAAKZ,MAAMC,0CAGtB,IAAAqB,EAAAzB,KACL,OAAgC,IAA5BA,KAAKG,MAAMC,MAAMsB,OAEVC,EAAAC,EAAAC,cAAA,yBAGPF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,oBAEIH,EAAAC,EAAAC,cAAA,SACIE,KAAK,SACLC,MAAM,WACNC,QAASjC,KAAKW,eAElBgB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAU3B,SAAUP,KAAKG,MAAMI,SAAUF,IAAKL,KAAKG,MAAME,MACzDsB,EAAAC,EAAAC,cAAA,UACK7B,KAAKG,MAAMC,MAAM+B,IAAI,SAAAC,GAAI,OACtBT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,EAAKE,KAAd,WACaF,EAAKG,OACdZ,EAAAC,EAAAC,cAAA,WAFJ,WAGaO,EAAKI,MACdb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIE,KAAK,SACLC,MAAM,OACNC,QAASR,EAAKjB,cAElBmB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIpC,IAAKoB,EAAKtB,MAAME,IAChBC,KAAMmB,EAAKtB,MAAMG,KACjBoC,GAAIN,EAAKE,IACTC,OAAQH,EAAKG,OACbC,MAAOJ,EAAKI,MACZG,QAASP,EAAKO","file":"js/457bd007750286b4da92.js","sourcesContent":["/* eslint-disable no-dupe-class-members */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/jsx-no-literals */\r\nimport React from \"react\";\r\nimport Axios from \"axios\";\r\nimport UsersEdit from \"./UsersEdit\";\r\nimport UsersAdd from \"./UsersAdd\";\r\n\r\nexport default class AdminUsers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            uri: \"http://localhost/api\",\r\n            show: \"\",\r\n            isCreate: \"\",\r\n        };\r\n        this.handleclick = this.handleclick.bind(this);\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n        // eslint-disable-next-line no-shadow\r\n    }\r\n    handleclick() {\r\n        if (this.state.show === false) {\r\n            this.setState({\r\n                show: true,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                show: false,\r\n            });\r\n        }\r\n    }\r\n    handleCreate() {\r\n        if (this.state.isCreate === false) {\r\n            this.setState({\r\n                isCreate: true,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isCreate: false,\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const uri = this.state.uri;\r\n\r\n        Axios.get(`${uri}/users`, {crossdomain: true}).then(response => {\r\n            console.log(response.data);\r\n            this.setState({users: response.data});\r\n            console.log(this.state.users);\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.users.length === 0) {\r\n            // eslint-disable-next-line react/no-unescaped-entities\r\n            return <div>Pending...</div>;\r\n        }\r\n        return (\r\n            <>\r\n                Users's list\r\n                <input\r\n                    type=\"button\"\r\n                    value=\"Add User\"\r\n                    onClick={this.handleCreate}\r\n                />\r\n                <UsersAdd isCreate={this.state.isCreate} uri={this.state.uri} />\r\n                <ul>\r\n                    {this.state.users.map(user => (\r\n                        <li key={user._id}>\r\n                            Pseudo: {user.pseudo}\r\n                            <br />\r\n                            E-mail: {user.email}\r\n                            <br />\r\n                            <input\r\n                                type=\"button\"\r\n                                value=\"Edit\"\r\n                                onClick={this.handleclick}\r\n                            />\r\n                            <UsersEdit\r\n                                uri={this.state.uri}\r\n                                show={this.state.show}\r\n                                id={user._id}\r\n                                pseudo={user.pseudo}\r\n                                email={user.email}\r\n                                isCoach={user.isCoach}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}